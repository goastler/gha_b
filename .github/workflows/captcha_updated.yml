name: captcha_updated
on:
  repository_dispatch:
    types: [captcha_updated]
  workflow_dispatch:

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - name: Print contexts
        env:
              GITHUB_CONTEXT: ${{ toJson(github) }}
              ENV_CONTEXT: ${{ toJson(env) }}
              VARS_CONTEXT: ${{ toJson(vars) }}
              JOB_CONTEXT: ${{ toJson(job) }}
              STEPS_CONTEXT: ${{ toJson(steps) }}
              RUNNER_CONTEXT: ${{ toJson(runner) }}
              SECRETS_CONTEXT: ${{ toJson(secrets) }}
              STRATEGY_CONTEXT: ${{ toJson(strategy) }}
              MATRIX_CONTEXT: ${{ toJson(matrix) }}
              NEEDS_CONTEXT: ${{ toJson(needs) }}
              INPUTS_CONTEXT: ${{ toJson(inputs) }}
        run: |
              echo "******************************"
              echo "github:" "$GITHUB_CONTEXT"
              echo "******************************"
              echo "env:" "$ENV_CONTEXT"
              echo "******************************"
              echo "vars:" "$VARS_CONTEXT"
              echo "******************************"
              echo "job:" "$JOB_CONTEXT"
              echo "******************************"
              echo "steps:" "$STEPS_CONTEXT"
              echo "******************************"
              echo "runner:" "$RUNNER_CONTEXT"
              echo "******************************"
              echo "secrets:" "$SECRETS_CONTEXT"
              echo "******************************"
              echo "strategy:" "$STRATEGY_CONTEXT"
              echo "******************************"
              echo "matrix:" "$MATRIX_CONTEXT"
              echo "******************************"
              echo "needs:" "$NEEDS_CONTEXT"
              echo "******************************"
              echo "inputs:" "$INPUTS_CONTEXT"
              echo "******************************"
      - name: Checkout repository with submodules
        uses: actions/checkout@v3
        with:
          submodules: recursive
    
      - name: Re-run submodule checks for open PRs
        env:
            GITHUB_TOKEN: ${{ secrets.PROSOPONATOR_PAT }}
            WORKFLOW: submodule_captcha.yml
        run: |
            PR_NUMBERS=$(gh pr list --state open --json number | jq -r '.[].number')
            for PR_NUMBER in $PR_NUMBERS; do
                echo "Getting workflow runs for PR #$PR_NUMBER"
                PAGE=1
                while [ true ]; do
                    curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
                        "https://api.github.com/repos/${{ github.repository }}/actions/runs?event=pull_request&per_page=100&page=$PAGE" > runs_page.json

                    jq '.workflow_runs[]' runs_page.json >> runs.json
                    
                    PAGE_COUNT=$(jq '.workflow_runs | length' runs_page.json)
                    if [ $PAGE_COUNT -lt 100 ]; then
                        break
                    fi
                    PAGE=$((PAGE + 1))
                done

                cat runs.json

                # WORKFLOW_RUN_ID=$(jq -r --arg pr "refs/pull/$PR_NUMBER/merge" '.workflow_runs[] | select(.head_branch==$pr) | select(.name=="captcha_submodule") | .id' runs.json)
                # if [ -n "$WORKFLOW_RUN_ID" ]; then
                # echo "Found workflow run $WORKFLOW_RUN_ID for PR #$PR_NUMBER"
                # curl -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
                #     "https://api.github.com/repos/${{ github.repository }}/actions/runs/$WORKFLOW_RUN_ID/rerun"
                # else
                # echo "No workflow run found for PR #$PR_NUMBER"
                # fi
            done